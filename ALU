#! /opt/local/bin/vvp
:ivl_version "0.9.6 " "(v0_9_6)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x7fcba2411730 .scope module, "ALUTEST" "ALUTEST" 2 1;
 .timescale 0 0;
v0x7fcba2441120_0 .var "a", 15 0;
v0x7fcba2440f70_0 .net "aout", 15 0, L_0x7fcba2441320; 1 drivers
v0x7fcba24411a0_0 .var "b", 15 0;
v0x7fcba2441220_0 .net "fout", 3 0, L_0x7fcba24413f0; 1 drivers
v0x7fcba24412a0_0 .var "salu", 3 0;
S_0x7fcba24048f0 .scope module, "alu" "ALU" 2 7, 3 1, S_0x7fcba2411730;
 .timescale 0 0;
v0x7fcba2440460_0 .alias "ALU_OUT", 15 0, v0x7fcba2440f70_0;
v0x7fcba2440500_0 .var "C", 0 0;
v0x7fcba2440590_0 .net "DATA_A", 15 0, v0x7fcba2441120_0; 1 drivers
v0x7fcba2440630_0 .net "DATA_B", 15 0, v0x7fcba24411a0_0; 1 drivers
v0x7fcba24406c0_0 .alias "FLAG_OUT", 3 0, v0x7fcba2441220_0;
v0x7fcba2440780_0 .var/i "IADD", 31 0;
v0x7fcba2440810_0 .var/i "IAND", 31 0;
v0x7fcba24408d0_0 .var/i "IOR", 31 0;
v0x7fcba2440950_0 .var/i "ISLL", 31 0;
v0x7fcba2440a20_0 .var/i "ISLR", 31 0;
v0x7fcba2440aa0_0 .var/i "ISRA", 31 0;
v0x7fcba2440b80_0 .var/i "ISRL", 31 0;
v0x7fcba2440c00_0 .var/i "ISUB", 31 0;
v0x7fcba2440cf0_0 .var/i "IXOR", 31 0;
v0x7fcba2440d70_0 .var "S", 0 0;
v0x7fcba2440e70_0 .net "S_ALU", 3 0, v0x7fcba24412a0_0; 1 drivers
v0x7fcba2440ef0_0 .var "V", 0 0;
v0x7fcba2440df0_0 .var "Z", 0 0;
v0x7fcba2441000_0 .var "result", 16 0;
E_0x7fcba24119e0 .event edge, v0x7fcba2440e70_0, v0x7fcba2440630_0, v0x7fcba2440590_0;
L_0x7fcba2441320 .part v0x7fcba2441000_0, 0, 16;
L_0x7fcba24413f0 .concat [ 1 1 1 1], v0x7fcba2440ef0_0, v0x7fcba2440500_0, v0x7fcba2440df0_0, v0x7fcba2440d70_0;
S_0x7fcba24401d0 .scope function, "ShiftLeftLogical" "ShiftLeftLogical" 3 20, 3 20, S_0x7fcba24048f0;
 .timescale 0 0;
v0x7fcba24402b0_0 .var "ShiftLeftLogical", 16 0;
v0x7fcba2440350_0 .var "in", 15 0;
v0x7fcba24403e0_0 .var "shift", 3 0;
TD_ALUTEST.alu.ShiftLeftLogical ;
    %load/v 8, v0x7fcba2440350_0, 16;
    %mov 24, 0, 1;
    %set/v v0x7fcba24402b0_0, 8, 17;
    %load/v 8, v0x7fcba24402b0_0, 17;
    %load/v 25, v0x7fcba24403e0_0, 4;
    %ix/get 0, 25, 4;
    %shiftl/i0  8, 17;
    %set/v v0x7fcba24402b0_0, 8, 17;
    %end;
S_0x7fcba243fd60 .scope function, "ShiftLeftRotate" "ShiftLeftRotate" 3 30, 3 30, S_0x7fcba24048f0;
 .timescale 0 0;
v0x7fcba243fe40_0 .var "ShiftLeftRotate", 16 0;
v0x7fcba243fee0_0 .var "carry", 0 0;
v0x7fcba243ff70_0 .var/i "i", 31 0;
v0x7fcba243fff0_0 .var "in", 15 0;
v0x7fcba2440080_0 .var "shift", 3 0;
v0x7fcba2440140_0 .var "shifted", 15 0;
TD_ALUTEST.alu.ShiftLeftRotate ;
    %set/v v0x7fcba243fee0_0, 0, 1;
    %load/v 8, v0x7fcba2440080_0, 4;
    %mov 12, 0, 1;
    %cmp/u 0, 8, 5;
    %jmp/0xz  T_1.0, 5;
    %movi 8, 16, 32;
    %load/v 40, v0x7fcba2440080_0, 4;
    %movi 44, 0, 28;
    %sub 8, 40, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_1.2, 4;
    %load/x1p 8, v0x7fcba243fff0_0, 1;
    %jmp T_1.3;
T_1.2 ;
    %mov 8, 2, 1;
T_1.3 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x7fcba243fee0_0, 8, 1;
T_1.0 ;
    %load/v 8, v0x7fcba243fff0_0, 16;
    %load/v 24, v0x7fcba2440080_0, 4;
    %ix/get 0, 24, 4;
    %shiftl/i0  8, 16;
    %set/v v0x7fcba2440140_0, 8, 16;
    %set/v v0x7fcba243ff70_0, 0, 32;
T_1.4 ;
    %load/v 8, v0x7fcba243ff70_0, 32;
    %load/v 40, v0x7fcba2440080_0, 4;
    %mov 44, 0, 28;
    %cmp/u 8, 40, 32;
    %jmp/0xz T_1.5, 5;
    %movi 8, 16, 32;
    %load/v 40, v0x7fcba2440080_0, 4;
    %movi 44, 0, 28;
    %sub 8, 40, 32;
    %load/v 40, v0x7fcba243ff70_0, 32;
    %add 8, 40, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_1.6, 4;
    %load/x1p 8, v0x7fcba243fff0_0, 1;
    %jmp T_1.7;
T_1.6 ;
    %mov 8, 2, 1;
T_1.7 ;
; Save base=8 wid=1 in lookaside.
    %ix/getv/s 0, v0x7fcba243ff70_0;
    %jmp/1 t_0, 4;
    %set/x0 v0x7fcba2440140_0, 8, 1;
t_0 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0x7fcba243ff70_0, 32;
    %set/v v0x7fcba243ff70_0, 8, 32;
    %jmp T_1.4;
T_1.5 ;
    %load/v 8, v0x7fcba2440140_0, 16;
    %load/v 24, v0x7fcba243fee0_0, 1;
    %set/v v0x7fcba243fe40_0, 8, 17;
    %end;
S_0x7fcba243f8f0 .scope function, "ShiftRightArithmatic" "ShiftRightArithmatic" 3 65, 3 65, S_0x7fcba24048f0;
 .timescale 0 0;
v0x7fcba243f9d0_0 .var "ShiftRightArithmatic", 16 0;
v0x7fcba243fa70_0 .var "carry", 0 0;
v0x7fcba243fb00_0 .var/i "i", 31 0;
v0x7fcba243fb80_0 .var "in", 15 0;
v0x7fcba243fc10_0 .var "shift", 3 0;
v0x7fcba243fcd0_0 .var "shifted", 15 0;
TD_ALUTEST.alu.ShiftRightArithmatic ;
    %set/v v0x7fcba243fa70_0, 0, 1;
    %load/v 8, v0x7fcba243fc10_0, 4;
    %mov 12, 0, 1;
    %cmp/u 0, 8, 5;
    %jmp/0xz  T_2.8, 5;
    %load/v 8, v0x7fcba243fc10_0, 4;
    %movi 12, 0, 28;
    %subi 8, 1, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_2.10, 4;
    %load/x1p 8, v0x7fcba243fb80_0, 1;
    %jmp T_2.11;
T_2.10 ;
    %mov 8, 2, 1;
T_2.11 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x7fcba243fa70_0, 8, 1;
T_2.8 ;
    %load/v 8, v0x7fcba243fb80_0, 16;
    %load/v 24, v0x7fcba243fc10_0, 4;
    %ix/get 0, 24, 4;
    %shiftr/i0  8, 16;
    %set/v v0x7fcba243fcd0_0, 8, 16;
    %set/v v0x7fcba243fb00_0, 0, 32;
T_2.12 ;
    %load/v 8, v0x7fcba243fb00_0, 32;
    %load/v 40, v0x7fcba243fc10_0, 4;
    %mov 44, 0, 28;
    %cmp/u 8, 40, 32;
    %jmp/0xz T_2.13, 5;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_2.14, 4;
    %load/x1p 8, v0x7fcba243fb80_0, 1;
    %jmp T_2.15;
T_2.14 ;
    %mov 8, 2, 1;
T_2.15 ;
; Save base=8 wid=1 in lookaside.
    %movi 9, 15, 32;
    %load/v 41, v0x7fcba243fb00_0, 32;
    %sub 9, 41, 32;
    %ix/get/s 0, 9, 32;
    %jmp/1 t_1, 4;
    %set/x0 v0x7fcba243fcd0_0, 8, 1;
t_1 ;
    %ix/load 0, 1, 0;
    %load/vp0/s 8, v0x7fcba243fb00_0, 32;
    %set/v v0x7fcba243fb00_0, 8, 32;
    %jmp T_2.12;
T_2.13 ;
    %load/v 8, v0x7fcba243fcd0_0, 16;
    %load/v 24, v0x7fcba243fa70_0, 1;
    %set/v v0x7fcba243f9d0_0, 8, 17;
    %end;
S_0x7fcba24049d0 .scope function, "ShiftRightLogical" "ShiftRightLogical" 3 49, 3 49, S_0x7fcba24048f0;
 .timescale 0 0;
v0x7fcba2424310_0 .var "ShiftRightLogical", 16 0;
v0x7fcba243f670_0 .var "carry", 0 0;
v0x7fcba243f700_0 .var "in", 15 0;
v0x7fcba243f7a0_0 .var "shift", 3 0;
v0x7fcba243f830_0 .var "shifted", 15 0;
TD_ALUTEST.alu.ShiftRightLogical ;
    %set/v v0x7fcba243f670_0, 0, 1;
    %load/v 8, v0x7fcba243f7a0_0, 4;
    %mov 12, 0, 1;
    %cmp/u 0, 8, 5;
    %jmp/0xz  T_3.16, 5;
    %load/v 8, v0x7fcba243f7a0_0, 4;
    %movi 12, 0, 28;
    %subi 8, 1, 32;
    %ix/get 1, 8, 32;
    %jmp/1 T_3.18, 4;
    %load/x1p 8, v0x7fcba243f700_0, 1;
    %jmp T_3.19;
T_3.18 ;
    %mov 8, 2, 1;
T_3.19 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x7fcba243f670_0, 8, 1;
T_3.16 ;
    %load/v 8, v0x7fcba243f700_0, 16;
    %load/v 24, v0x7fcba243f7a0_0, 4;
    %ix/get 0, 24, 4;
    %shiftr/i0  8, 16;
    %set/v v0x7fcba243f830_0, 8, 16;
    %load/v 8, v0x7fcba243f830_0, 16;
    %load/v 24, v0x7fcba243f670_0, 1;
    %set/v v0x7fcba2424310_0, 8, 17;
    %end;
    .scope S_0x7fcba24048f0;
T_4 ;
    %set/v v0x7fcba2440780_0, 0, 32;
    %end;
    .thread T_4;
    .scope S_0x7fcba24048f0;
T_5 ;
    %movi 8, 1, 32;
    %set/v v0x7fcba2440c00_0, 8, 32;
    %end;
    .thread T_5;
    .scope S_0x7fcba24048f0;
T_6 ;
    %movi 8, 2, 32;
    %set/v v0x7fcba2440810_0, 8, 32;
    %end;
    .thread T_6;
    .scope S_0x7fcba24048f0;
T_7 ;
    %movi 8, 3, 32;
    %set/v v0x7fcba24408d0_0, 8, 32;
    %end;
    .thread T_7;
    .scope S_0x7fcba24048f0;
T_8 ;
    %movi 8, 4, 32;
    %set/v v0x7fcba2440cf0_0, 8, 32;
    %end;
    .thread T_8;
    .scope S_0x7fcba24048f0;
T_9 ;
    %movi 8, 8, 32;
    %set/v v0x7fcba2440950_0, 8, 32;
    %end;
    .thread T_9;
    .scope S_0x7fcba24048f0;
T_10 ;
    %movi 8, 9, 32;
    %set/v v0x7fcba2440a20_0, 8, 32;
    %end;
    .thread T_10;
    .scope S_0x7fcba24048f0;
T_11 ;
    %movi 8, 10, 32;
    %set/v v0x7fcba2440b80_0, 8, 32;
    %end;
    .thread T_11;
    .scope S_0x7fcba24048f0;
T_12 ;
    %movi 8, 11, 32;
    %set/v v0x7fcba2440aa0_0, 8, 32;
    %end;
    .thread T_12;
    .scope S_0x7fcba24048f0;
T_13 ;
    %set/v v0x7fcba2440ef0_0, 0, 1;
    %end;
    .thread T_13;
    .scope S_0x7fcba24048f0;
T_14 ;
    %wait E_0x7fcba24119e0;
    %load/v 8, v0x7fcba2440e70_0, 4;
    %load/v 12, v0x7fcba2440780_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.0, 6;
    %load/v 12, v0x7fcba2440c00_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.1, 6;
    %load/v 12, v0x7fcba2440810_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.2, 6;
    %load/v 12, v0x7fcba24408d0_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.3, 6;
    %load/v 12, v0x7fcba2440cf0_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.4, 6;
    %load/v 12, v0x7fcba2440950_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.5, 6;
    %load/v 12, v0x7fcba2440a20_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.6, 6;
    %load/v 12, v0x7fcba2440b80_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.7, 6;
    %load/v 12, v0x7fcba2440aa0_0, 4;
    %cmp/u 8, 12, 4;
    %jmp/1 T_14.8, 6;
    %set/v v0x7fcba2441000_0, 0, 17;
    %jmp T_14.10;
T_14.0 ;
    %load/v 8, v0x7fcba2440590_0, 16;
    %mov 24, 0, 1;
    %load/v 25, v0x7fcba2440630_0, 16;
    %mov 41, 0, 1;
    %add 8, 25, 17;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.1 ;
    %load/v 8, v0x7fcba2440590_0, 16;
    %mov 24, 0, 1;
    %load/v 25, v0x7fcba2440630_0, 16;
    %mov 41, 0, 1;
    %sub 8, 25, 17;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.2 ;
    %load/v 25, v0x7fcba2440590_0, 16;
    %load/v 41, v0x7fcba2440630_0, 16;
    %and 25, 41, 16;
    %mov 8, 25, 16;
    %mov 24, 0, 1;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.3 ;
    %load/v 25, v0x7fcba2440590_0, 16;
    %load/v 41, v0x7fcba2440630_0, 16;
    %or 25, 41, 16;
    %mov 8, 25, 16;
    %mov 24, 0, 1;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.4 ;
    %load/v 25, v0x7fcba2440590_0, 16;
    %load/v 41, v0x7fcba2440630_0, 16;
    %xor 25, 41, 16;
    %mov 8, 25, 16;
    %mov 24, 0, 1;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.5 ;
    %load/v 8, v0x7fcba2440590_0, 16;
    %set/v v0x7fcba2440350_0, 8, 16;
    %load/v 8, v0x7fcba2440630_0, 4; Only need 4 of 16 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0x7fcba24403e0_0, 8, 4;
    %fork TD_ALUTEST.alu.ShiftLeftLogical, S_0x7fcba24401d0;
    %join;
    %load/v  8, v0x7fcba24402b0_0, 17;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.6 ;
    %load/v 8, v0x7fcba2440590_0, 16;
    %set/v v0x7fcba243fff0_0, 8, 16;
    %load/v 8, v0x7fcba2440630_0, 4; Only need 4 of 16 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0x7fcba2440080_0, 8, 4;
    %fork TD_ALUTEST.alu.ShiftLeftRotate, S_0x7fcba243fd60;
    %join;
    %load/v  8, v0x7fcba243fe40_0, 17;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.7 ;
    %load/v 8, v0x7fcba2440590_0, 16;
    %set/v v0x7fcba243f700_0, 8, 16;
    %load/v 8, v0x7fcba2440630_0, 4; Only need 4 of 16 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0x7fcba243f7a0_0, 8, 4;
    %fork TD_ALUTEST.alu.ShiftRightLogical, S_0x7fcba24049d0;
    %join;
    %load/v  8, v0x7fcba2424310_0, 17;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.8 ;
    %load/v 8, v0x7fcba2440590_0, 16;
    %set/v v0x7fcba243fb80_0, 8, 16;
    %load/v 8, v0x7fcba2440630_0, 4; Only need 4 of 16 bits
; Save base=8 wid=4 in lookaside.
    %set/v v0x7fcba243fc10_0, 8, 4;
    %fork TD_ALUTEST.alu.ShiftRightArithmatic, S_0x7fcba243f8f0;
    %join;
    %load/v  8, v0x7fcba243f9d0_0, 17;
    %set/v v0x7fcba2441000_0, 8, 17;
    %jmp T_14.10;
T_14.10 ;
    %load/v 8, v0x7fcba2441000_0, 16; Select 16 out of 17 bits
    %mov 24, 0, 1;
    %cmpi/u 8, 0, 17;
    %mov 8, 4, 1;
    %set/v v0x7fcba2440df0_0, 8, 1;
    %ix/load 1, 16, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.11, 4;
    %load/x1p 8, v0x7fcba2441000_0, 1;
    %jmp T_14.12;
T_14.11 ;
    %mov 8, 2, 1;
T_14.12 ;
; Save base=8 wid=1 in lookaside.
    %set/v v0x7fcba2440500_0, 8, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.13, 4;
    %load/x1p 11, v0x7fcba2441000_0, 1;
    %jmp T_14.14;
T_14.13 ;
    %mov 11, 2, 1;
T_14.14 ;
    %mov 8, 11, 1; Move signal select into place
    %mov 9, 0, 2;
    %cmpi/u 8, 1, 3;
    %mov 8, 4, 1;
    %set/v v0x7fcba2440d70_0, 8, 1;
    %load/v 8, v0x7fcba2440e70_0, 4;
    %mov 12, 0, 28;
    %load/v 40, v0x7fcba2440780_0, 32;
    %cmp/u 8, 40, 32;
    %mov 8, 4, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.15, 4;
    %load/x1p 9, v0x7fcba2440590_0, 1;
    %jmp T_14.16;
T_14.15 ;
    %mov 9, 2, 1;
T_14.16 ;
; Save base=9 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.17, 4;
    %load/x1p 10, v0x7fcba2440630_0, 1;
    %jmp T_14.18;
T_14.17 ;
    %mov 10, 2, 1;
T_14.18 ;
; Save base=10 wid=1 in lookaside.
    %cmp/u 9, 10, 1;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.19, 4;
    %load/x1p 9, v0x7fcba2440590_0, 1;
    %jmp T_14.20;
T_14.19 ;
    %mov 9, 2, 1;
T_14.20 ;
; Save base=9 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.21, 4;
    %load/x1p 10, v0x7fcba2441000_0, 1;
    %jmp T_14.22;
T_14.21 ;
    %mov 10, 2, 1;
T_14.22 ;
; Save base=10 wid=1 in lookaside.
    %cmp/u 9, 10, 1;
    %inv 4, 1;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %load/v 9, v0x7fcba2440e70_0, 4;
    %mov 13, 0, 28;
    %load/v 41, v0x7fcba2440c00_0, 32;
    %cmp/u 9, 41, 32;
    %mov 9, 4, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.23, 4;
    %load/x1p 10, v0x7fcba2440590_0, 1;
    %jmp T_14.24;
T_14.23 ;
    %mov 10, 2, 1;
T_14.24 ;
; Save base=10 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.25, 4;
    %load/x1p 11, v0x7fcba2440630_0, 1;
    %jmp T_14.26;
T_14.25 ;
    %mov 11, 2, 1;
T_14.26 ;
; Save base=11 wid=1 in lookaside.
    %cmp/u 10, 11, 1;
    %inv 4, 1;
    %mov 10, 4, 1;
    %and 9, 10, 1;
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.27, 4;
    %load/x1p 10, v0x7fcba2440590_0, 1;
    %jmp T_14.28;
T_14.27 ;
    %mov 10, 2, 1;
T_14.28 ;
; Save base=10 wid=1 in lookaside.
    %ix/load 1, 15, 0;
    %mov 4, 0, 1;
    %jmp/1 T_14.29, 4;
    %load/x1p 11, v0x7fcba2441000_0, 1;
    %jmp T_14.30;
T_14.29 ;
    %mov 11, 2, 1;
T_14.30 ;
; Save base=11 wid=1 in lookaside.
    %cmp/u 10, 11, 1;
    %inv 4, 1;
    %mov 10, 4, 1;
    %and 9, 10, 1;
    %or 8, 9, 1;
    %jmp/0xz  T_14.31, 8;
    %set/v v0x7fcba2440ef0_0, 1, 1;
    %jmp T_14.32;
T_14.31 ;
    %set/v v0x7fcba2440ef0_0, 0, 1;
T_14.32 ;
    %jmp T_14;
    .thread T_14, $push;
    .scope S_0x7fcba2411730;
T_15 ;
    %vpi_call 2 10 "$dumpfile", "aluTest.vcd";
    %vpi_call 2 11 "$dumpvars", 1'sb0, S_0x7fcba2411730;
    %vpi_call 2 12 "$monitor", "%t: %b, %b -> %b :: %d, %d -> %d (%b)", $time, v0x7fcba2441120_0, v0x7fcba24411a0_0, v0x7fcba2440f70_0, v0x7fcba2441120_0, v0x7fcba24411a0_0, v0x7fcba2440f70_0, v0x7fcba2441220_0;
    %vpi_call 2 14 "$display", " --- ISUB ---";
    %movi 8, 1, 4;
    %set/v v0x7fcba24412a0_0, 8, 4;
    %set/v v0x7fcba2441120_0, 0, 16;
    %set/v v0x7fcba24411a0_0, 0, 16;
    %delay 10, 0;
    %movi 8, 5, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 8, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 10, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 20, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 123, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 234, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 1234, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 4321, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 20000, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 20000, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 40000, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 40000, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 12345, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 54321, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 30000, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 35536, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %vpi_call 2 25 "$display", " --- ISUB ---";
    %movi 8, 1, 4;
    %set/v v0x7fcba24412a0_0, 8, 4;
    %set/v v0x7fcba2441120_0, 0, 16;
    %set/v v0x7fcba24411a0_0, 0, 16;
    %delay 10, 0;
    %movi 8, 35, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 34, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 34, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 35, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 234, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 123, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 9999, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 9999, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 40000, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 30000, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 30000, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %movi 8, 40000, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %vpi_call 2 34 "$display", " --- ISLL ---";
    %movi 8, 8, 4;
    %set/v v0x7fcba24412a0_0, 8, 4;
    %movi 8, 65280, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %set/v v0x7fcba24411a0_0, 0, 16;
    %delay 10, 0;
    %movi 8, 1, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 2, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 3, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 4, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 5, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 6, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 7, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 8, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 9, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 10, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %vpi_call 2 48 "$display", " --- ISLR ---";
    %movi 8, 9, 4;
    %set/v v0x7fcba24412a0_0, 8, 4;
    %movi 8, 65280, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %set/v v0x7fcba24411a0_0, 0, 16;
    %delay 10, 0;
    %movi 8, 1, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 2, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 3, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 4, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 5, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 6, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 7, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 8, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 9, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 10, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %vpi_call 2 62 "$display", " --- ISRL ---";
    %movi 8, 10, 4;
    %set/v v0x7fcba24412a0_0, 8, 4;
    %movi 8, 65280, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %set/v v0x7fcba24411a0_0, 0, 16;
    %delay 10, 0;
    %movi 8, 1, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 2, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 3, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 4, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 5, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 6, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 7, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 8, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 9, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 10, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %vpi_call 2 76 "$display", " --- ISRA ---";
    %movi 8, 11, 4;
    %set/v v0x7fcba24412a0_0, 8, 4;
    %movi 8, 65280, 16;
    %set/v v0x7fcba2441120_0, 8, 16;
    %set/v v0x7fcba24411a0_0, 0, 16;
    %delay 10, 0;
    %movi 8, 1, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 2, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 3, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 4, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 5, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 6, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 7, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 8, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 9, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %movi 8, 10, 16;
    %set/v v0x7fcba24411a0_0, 8, 16;
    %delay 10, 0;
    %vpi_call 2 89 "$finish";
    %end;
    .thread T_15;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "aluTest.v";
    "ALU.v";
